syntax = "proto3";

import "github.com/micro/go-platform/monitor/proto/monitor.proto";

service Monitor {
	rpc HealthChecks(HealthChecksRequest) returns (HealthChecksResponse) {}
	rpc Services(ServicesRequest) returns (ServicesResponse) {}
	rpc Status(StatusRequest) returns (StatusResponse) {}
	rpc Stats(StatsRequest) returns (StatsResponse) {}
}

message HealthChecksRequest {
	// optional: service name
	string service = 1;
	// optional: healthcheck id
	string id = 2;
	HealthCheck.Status status = 3;
	uint64 limit = 4;
	uint64 offset = 5;
}

message HealthChecksResponse {
	repeated HealthCheck healthchecks = 1;
}

message ServicesRequest {
	string service = 1;
}

message ServicesResponse {
	repeated Service services = 1;
}

message StatusRequest {
	string service = 1;
	string id = 2;
	int64 limit = 3;
	int64 offset = 4;
	// will break out status by node
	bool verbose = 5;
}

message StatusResponse {
	repeated Status statuses = 1;
}

message StatsRequest {
	string service = 1;
	string id = 2;
	int64 limit = 3;
	int64 offset = 4;
}

message StatsResponse {
	repeated Stats stats = 1;
}
